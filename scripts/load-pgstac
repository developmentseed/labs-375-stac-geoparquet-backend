#!/usr/bin/env python

"""Loads data to pgstac"""

import asyncio
import json
import sys
from pathlib import Path
from typing import Any

import boto3
from botocore.exceptions import ClientError
from pgstacrs import Client as PgstacClient
from stacrs import DuckdbClient

data = Path(__file__).parents[1] / "data"
naip = data / "naip.parquet"


# Copied directly from https://us-west-2.console.aws.amazon.com/secretsmanager/secret?name=pgstacdbpgbouncerPgBouncerS-SA0RNaZ7RHR5&region=us-west-2
def get_secret() -> dict[str, Any]:
    secret_name = "pgstacdbpgbouncerPgBouncerS-SA0RNaZ7RHR5"
    region_name = "us-west-2"
    session = boto3.session.Session()
    client = session.client(service_name="secretsmanager", region_name=region_name)
    try:
        get_secret_value_response = client.get_secret_value(SecretId=secret_name)
    except ClientError as e:
        raise e
    return json.loads(get_secret_value_response["SecretString"])


async def load() -> None:
    secret = get_secret()
    pgstac_client = await PgstacClient.open(
        f"postgresql://{secret['username']}:{secret['password']}@{secret['host']}:{secret['port']}/{secret['dbname']}"
    )
    print("Getting collection")
    collection = await pgstac_client.get_collection("naip")
    if collection and len(sys.argv) == 2 and sys.argv[1] == "--force":
        print("Deleting collection")
        await pgstac_client.delete_collection("naip")
    if await pgstac_client.get_collection("naip") is None:
        duckdb_client = DuckdbClient()
        collection = duckdb_client.get_collections(str(naip))[0]
        items = duckdb_client.search(str(naip), collections=["naip"])["features"]
        print("Creating collection")
        await pgstac_client.create_collection(collection)
        print("Creating items (this might take a while)")
        await pgstac_client.create_items(items)


if __name__ == "__main__":
    asyncio.run(load())
